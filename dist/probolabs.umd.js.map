{"version":3,"file":"probolabs.umd.js","sources":["../src/constants.js","../src/utils.js","../src/finders.js","../src/highlight.js"],"sourcesContent":["export const ElementTag = {\n  CLICKABLE: \"CLICKABLE\", // button, link, toggle switch, checkbox, radio, dropdowns, clickable divs\n  FILLABLE: \"FILLABLE\", // input, textarea content_editable, date picker??\n  SELECTABLE: \"SELECTABLE\", // select\n  NON_INTERACTIVE_ELEMENT: 'NON_INTERACTIVE_ELEMENT',\n};\n\nexport class ElementInfo {\n  constructor(element, index, {tag, type, text, html, xpath, css_selector, bounding_box}) {\n    this.index = index.toString();\n    this.tag = tag;\n    this.type = type;\n    this.text = text;\n    this.html = html;\n    this.xpath = xpath;\n    this.css_selector = css_selector;\n    this.bounding_box = bounding_box;\n    this.element = element;\n  }\n}\n","import { ElementInfo } from './constants';\n\nexport function generateXPath(element) {\n  if (!element) return '';\n  \n  // If element has an id, use that (it's unique and shorter)\n  if (element.id) {\n    return `//*[@id=\"${element.id}\"]`;\n  }\n  \n  const parts = [];\n  let current = element;\n  \n  while (current && current.nodeType === Node.ELEMENT_NODE) {\n    let index = 1;\n    let sibling = current.previousSibling;\n    \n    while (sibling) {\n      if (sibling.nodeType === Node.ELEMENT_NODE && sibling.tagName === current.tagName) {\n        index++;\n      }\n      sibling = sibling.previousSibling;\n    }\n    \n    const tagName = current.tagName.toLowerCase();\n    parts.unshift(`${tagName}[${index}]`);\n    current = current.parentNode;\n  }\n  \n  return '/' + parts.join('/');\n}\n\nexport function getElementInfo(element, index) {\n  function cleanHTML(rawHTML) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(rawHTML, \"text/html\");\n\n    function cleanElement(element) {\n      const allowedAttributes = new Set([\n        \"role\",\n        \"type\",\n        \"class\",\n        \"href\",\n        \"alt\",\n        \"title\",\n        \"readonly\",\n        \"checked\",\n        \"enabled\",\n        \"disabled\",\n      ]);\n\n      [...element.attributes].forEach(attr => {\n        const name = attr.name.toLowerCase();\n        const value = attr.value;\n\n        const isTestAttribute = /^(testid|test-id|data-test-id)$/.test(name);\n        const isDataAttribute = name.startsWith(\"data-\") && value;\n        const isBooleanAttribute = [\"readonly\", \"checked\", \"enabled\", \"disabled\"].includes(name);\n\n        if (!allowedAttributes.has(name) && !isDataAttribute && !isTestAttribute && !isBooleanAttribute) {\n          element.removeAttribute(name);\n        }\n      });\n\n      // Handle SVG content - more aggressive replacement\n      if (element.tagName.toLowerCase() === \"svg\") {\n        // Remove all attributes except class and role\n        [...element.attributes].forEach(attr => {\n          const name = attr.name.toLowerCase();\n          if (name !== \"class\" && name !== \"role\") {\n            element.removeAttribute(name);\n          }\n        });\n        element.innerHTML = \"CONTENT REMOVED\";\n      } else {\n        // Recursively clean child elements\n        Array.from(element.children).forEach(cleanElement);\n      }\n\n      // Only remove empty elements that aren't semantic or icon elements\n      const keepEmptyElements = ['i', 'span', 'svg', 'button', 'input'];\n      if (!keepEmptyElements.includes(element.tagName.toLowerCase()) && \n          !element.children.length && \n          !element.textContent.trim()) {\n        element.remove();\n      }\n    }\n\n    // Process all elements in the document body\n    Array.from(doc.body.children).forEach(cleanElement);\n    return doc.body.innerHTML;\n  }\n\n  // Get CSS selector\n  const getCssPath = (el) => {\n    const path = [];\n    while (el.nodeType === Node.ELEMENT_NODE) {\n      let selector = el.nodeName.toLowerCase();\n      if (el.id) {\n        selector = `#${el.id}`;\n        path.unshift(selector);\n        break;\n      } else {\n        let sibling = el;\n        let nth = 1;\n        while (sibling = sibling.previousElementSibling) {\n          if (sibling.nodeName.toLowerCase() === selector) nth++;\n        }\n        if (nth > 1) selector += `:nth-of-type(${nth})`;\n      }\n      path.unshift(selector);\n      el = el.parentNode;\n    }\n    return path.join(' > ');\n  };\n\n  // Get bounding box\n  const rect = element.getBoundingClientRect();\n  const boundingBox = {\n    x: rect.x,\n    y: rect.y,\n    width: rect.width,\n    height: rect.height\n  };\n\n  // Return element info with pre-calculated values\n  return new ElementInfo(element, index, {\n    tag: element.tagName.toLowerCase(),\n    type: element.type || '',\n    text: element.textContent.trim(),\n    html: cleanHTML(element.outerHTML),\n    xpath: generateXPath(element),\n    css_selector: getCssPath(element),\n    bounding_box: boundingBox\n  });\n}\n\n\n\n\nconst filterZeroDimensions = (elementInfo) => {\n  const rect = elementInfo.bounding_box;\n  const hasSize = rect.width > 0 && rect.height > 0;\n  const style = window.getComputedStyle(elementInfo.element);\n  const isVisible = style.display !== 'none' && style.visibility !== 'hidden';\n  \n  if (!hasSize || !isVisible) {\n    if (elementInfo.element.isConnected) {\n      // console.debug('Filtered out invisible/zero-size element:', {\n      //   tag: elementInfo.tag,\n      //   xpath: elementInfo.xpath,\n      //   hasSize,\n      //   isVisible,\n      //   dimensions: rect\n      // });\n    }\n    return false;\n  }\n  return true;\n};\n\nexport function uniquifyElements(elements) {\n  const seen = new Set();\n  console.log(`Starting uniquification with ${elements.length} elements`);\n  // First filter out elements with zero dimensions\n  const nonZeroElements = elements.filter(filterZeroDimensions);\n  // sort by xpath length so parents are processed first\n  nonZeroElements.sort((a, b) => a.xpath.length - b.xpath.length);\n  console.log(`After dimension filtering: ${nonZeroElements.length} elements remain (${elements.length - nonZeroElements.length} removed)`);\n  nonZeroElements.forEach(element => seen.add(element.xpath));\n  const filteredByParent = nonZeroElements.filter(element => {\n    const parentXPath = findClosestParent(seen, element.xpath);\n    const keep = parentXPath == null || shouldKeepNestedElement(element, parentXPath);\n    // if (!keep) {\n    //   console.log(`Filtered out element ${element.index} because it's a nested element of ${parentXPath}`);\n    // }\n    return keep;\n  });\n\n  console.log(`After parent/child filtering: ${filteredByParent.length} elements remain (${nonZeroElements.length - filteredByParent.length} removed)`);\n\n  // Final overlap filtering\n  const filteredResults = filteredByParent.filter(element => {\n    // Look for any element that came BEFORE this one in the array\n    const hasEarlierOverlap = filteredByParent.some(other => {\n      // Only check elements that came before (lower index)\n      if (filteredByParent.indexOf(other) >= filteredByParent.indexOf(element)) {\n        return false;\n      }\n      \n      return areElementsOverlapping(element, other);\n    });\n\n    // Keep element if it has no earlier overlapping elements\n    return !hasEarlierOverlap;\n  });\n  \n  console.log(`Final elements after filtering: ${filteredResults.length} (${filteredByParent.length - filteredResults.length} removed by overlap)`);\n  \n  return filteredResults.map((element, index) => ({\n    ...element,\n    index: index.toString()\n  }));\n}\n\n\n\nconst areElementsOverlapping = (element1, element2) => {\n  if (element1.xpath === element2.xpath) {\n    return true;\n  }\n  \n  const box1 = element1.bounding_box;\n  const box2 = element2.bounding_box;\n  \n  return box1.x === box2.x &&\n         box1.y === box2.y &&\n         box1.width === box2.width &&\n         box1.height === box2.height;\n        //  element1.text === element2.text &&\n        //  element2.tag === 'a';\n};\n\nfunction findClosestParent(seen, xpath) {\n  // Split the xpath into segments\n  const segments = xpath.split('/');\n  \n  // Try increasingly shorter paths until we find one in the seen set\n  for (let i = segments.length - 1; i > 0; i--) {\n    const parentPath = segments.slice(0, i).join('/');\n    if (seen.has(parentPath)) {\n      return parentPath;\n    }\n  }\n  \n  return null;\n}\n\nfunction shouldKeepNestedElement(elementInfo, parentXPath) {\n  let result = false;\n  \n  // If this is a checkbox/radio input\n  if (elementInfo.tag === 'input' && \n      (elementInfo.type === 'checkbox' || elementInfo.type === 'radio')) {\n    \n    // Check if parent is a label by looking at the parent xpath's last segment\n    const parentSegments = parentXPath.split('/');\n    const isParentLabel = parentSegments[parentSegments.length - 1].startsWith('label[');\n    \n    // If parent is a label, don't keep the input (we'll keep the label instead)\n    if (isParentLabel) {\n      return false;\n    }\n  }\n  \n  // Keep all other form controls and dropdown items\n  if (isFormControl(elementInfo) || isDropdownItem(elementInfo)) {\n    result = true;\n  }\n  \n  // console.log(`shouldKeepNestedElement: ${elementInfo.tag} ${elementInfo.text} ${elementInfo.xpath} -> ${parentXPath} -> ${result}`);\n  return result;\n}\n\n// Helper function to check if element is a form control\nfunction isFormControl(elementInfo) {\n  return /^(input|select|textarea|button)$/i.test(elementInfo.tag);\n}\n\nconst isDropdownItem = (elementInfo) => {\n  const dropdownPatterns = [\n    /dropdown[-_]?item/i,    // matches: dropdown-item, dropdownitem, dropdown_item\n    /menu[-_]?item/i,        // matches: menu-item, menuitem, menu_item\n    /dropdown[-_]?link/i,    // matches: dropdown-link, dropdownlink, dropdown_link\n    /list[-_]?item/i,       // matches: list-item, listitem, list_item\n    /select[-_]?item/i,     // matches: select-item, selectitem, select_item  \n  ];\n\n  const rolePatterns = [\n    /menu[-_]?item/i,       // matches: menuitem, menu-item\n    /option/i,              // matches: option\n    /list[-_]?item/i,      // matches: listitem, list-item\n    /tree[-_]?item/i       // matches: treeitem, tree-item\n  ];\n\n  const hasMatchingClass = elementInfo.element.className && \n                          dropdownPatterns.some(pattern => \n                            pattern.test(elementInfo.element.className)\n                          );\n\n  const hasMatchingRole = elementInfo.element.getAttribute('role') && \n                         rolePatterns.some(pattern => \n                           pattern.test(elementInfo.element.getAttribute('role'))\n                         );\n\n  return hasMatchingClass || hasMatchingRole;\n};\n","import { uniquifyElements } from './utils';\n\nexport function findDropdowns() {\n  const dropdowns = [];\n  \n  // Native select elements\n  dropdowns.push(...document.querySelectorAll('select'));\n  \n  // Elements with dropdown roles\n  dropdowns.push(...document.querySelectorAll('[role=\"combobox\"], [role=\"listbox\"], [role=\"dropdown\"]'));\n  \n  // Common dropdown class patterns\n  const dropdownPattern = /.*(dropdown|select|combobox).*/i;\n  const elements = document.querySelectorAll('*');\n  const dropdownClasses = Array.from(elements).filter(el => {\n    const hasDropdownClass = dropdownPattern.test(el.className);\n    const validTag = ['li', 'ul', 'span', 'div', 'p'].includes(el.tagName.toLowerCase());\n    const result = hasDropdownClass && validTag;\n    return result;\n  });\n  dropdowns.push(...dropdownClasses);\n  \n  // Elements with aria-haspopup attribute\n  dropdowns.push(...document.querySelectorAll('[aria-haspopup=\"true\"], [aria-haspopup=\"listbox\"]'));\n\n  dropdowns.push(...document.querySelectorAll('nav ul li'));\n\n  return dropdowns;\n}\n\nexport function findClickables() {\n  const clickables = [];\n  \n  // Collect all clickable elements first\n  const links = [...document.querySelectorAll('a[href]')];\n  const buttons = [...document.querySelectorAll('button')];\n  const inputButtons = [...document.querySelectorAll('input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]')];\n  const roleButtons = [...document.querySelectorAll('[role=\"button\"]')];\n  const tabbable = [...document.querySelectorAll('[tabindex=\"0\"]')];\n  const clickHandlers = [...document.querySelectorAll('[onclick]')];\n  const dropdowns = findDropdowns();\n  const checkboxes = [...document.querySelectorAll('input[type=\"checkbox\"]')];\n  const radios = [...document.querySelectorAll('input[type=\"radio\"]')];\n  const toggles = findToggles();\n  const pointerElements = findElementsWithPointer();\n  // Add all elements at once\n  clickables.push(\n    ...links,\n    ...buttons,\n    ...inputButtons,\n    ...roleButtons,\n    ...tabbable,\n    ...clickHandlers,\n    ...dropdowns,\n    ...checkboxes,\n    ...radios,\n    ...toggles,\n    ...pointerElements\n  );\n\n  // Only uniquify once at the end\n  return clickables;  // Let findElements handle the uniquification\n}\n\nexport function findToggles() {\n  const toggles = [];\n  const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n  const togglePattern = /switch|toggle|slider/i;\n\n  checkboxes.forEach(checkbox => {\n    let isToggle = false;\n\n    // Check the checkbox itself\n    if (togglePattern.test(checkbox.className) || togglePattern.test(checkbox.getAttribute('role') || '')) {\n      isToggle = true;\n    }\n\n    // Check parent elements (up to 3 levels)\n    if (!isToggle) {\n      let element = checkbox;\n      for (let i = 0; i < 3; i++) {\n        const parent = element.parentElement;\n        if (!parent) break;\n\n        const className = parent.className || '';\n        const role = parent.getAttribute('role') || '';\n\n        if (togglePattern.test(className) || togglePattern.test(role)) {\n          isToggle = true;\n          break;\n        }\n        element = parent;\n      }\n    }\n\n    // Check next sibling\n    if (!isToggle) {\n      const nextSibling = checkbox.nextElementSibling;\n      if (nextSibling) {\n        const className = nextSibling.className || '';\n        const role = nextSibling.getAttribute('role') || '';\n        if (togglePattern.test(className) || togglePattern.test(role)) {\n          isToggle = true;\n        }\n      }\n    }\n\n    if (isToggle) {\n      toggles.push(checkbox);\n    }\n  });\n\n  return toggles;\n}\n\nexport function findNonInteractiveElements() {\n  // Get all elements in the document\n  const all = Array.from(document.querySelectorAll('*'));\n  \n  // Filter elements based on Python implementation rules\n  return all.filter(element => {\n    if (!element.firstElementChild) {\n      const tag = element.tagName.toLowerCase();\n      if (!['select', 'button', 'a'].includes(tag)) {\n        return ['p', 'span', 'div', 'input', 'textarea'].includes(tag);\n      }\n    }\n    return false;\n  });\n}\n\nexport function findElementsWithPointer() {\n  const elements = [];\n  const allElements = document.querySelectorAll('*');\n  \n  console.log('Checking elements with pointer style...');\n  \n  allElements.forEach(element => {\n    // Skip SVG elements for now\n    if (element instanceof SVGElement) {\n      return;\n    }\n    \n    const style = window.getComputedStyle(element);\n    if (style.cursor === 'pointer') {\n      elements.push(element);\n    }\n  });\n  \n  console.log(`Found ${elements.length} elements with pointer cursor`);\n  return elements;\n}\n","import { ElementTag } from './constants';\nimport { findDropdowns, findClickables, findToggles, findNonInteractiveElements } from './finders';\nimport { uniquifyElements, getElementInfo } from './utils';\n\nexport const highlight = {\n  execute: async function(elementTypes) {\n    const elements = await findElements(elementTypes);\n    highlightElements(elements);\n    return elements;\n  },\n\n  unexecute: function() {\n    const overlay = document.getElementById('highlight-overlay');\n    if (overlay) {\n      overlay.remove();\n    }\n  },\n\n  getElementInfo\n};\n\n\nexport function unhighlightElements() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\n\n\n\nexport async function findElements(elementTypes) {\n  const typesArray = Array.isArray(elementTypes) ? elementTypes : [elementTypes];\n  console.log('🔍 Starting element search for types:', typesArray);\n\n  const elements = [];\n  typesArray.forEach(elementType => {\n    if (elementType === ElementTag.FILLABLE) {\n      const inputs = [...document.querySelectorAll('input:not([type=\"radio\"]):not([type=\"checkbox\"])')];\n      console.log('Found inputs:', inputs.length, inputs);\n      elements.push(...inputs);\n      \n      const textareas = [...document.querySelectorAll('textarea')];\n      console.log('Found textareas:', textareas.length);\n      elements.push(...textareas);\n      \n      const editables = [...document.querySelectorAll('[contenteditable=\"true\"]')];\n      console.log('Found editables:', editables.length);\n      elements.push(...editables);\n    }\n    if (elementType === ElementTag.SELECTABLE) {\n      elements.push(...findDropdowns());\n    }\n    if (elementType === ElementTag.CLICKABLE) {\n      elements.push(...findClickables());\n      elements.push(...findToggles());\n      elements.push(...document.querySelectorAll('input[type=\"checkbox\"]'));\n      elements.push(...document.querySelectorAll('input[type=\"radio\"]'));\n    }\n    if (elementType === ElementTag.NON_INTERACTIVE_ELEMENT) {\n      elements.push(...findNonInteractiveElements());\n    }\n  });\n\n  // console.log('Before uniquify:', elements.length);\n  const elementsWithInfo = elements.map((element, index) => \n    getElementInfo(element, index)\n  );\n  \n  const uniqueElements = uniquifyElements(elementsWithInfo);\n  console.log(`Found ${uniqueElements.length} elements:`);\n  uniqueElements.forEach(info => {\n    console.log(`Element ${info.index}:`, info);\n  });\n  \n  return uniqueElements;\n}\n\n// elements is an array of objects with index, xpath\nexport function highlightElements(elements) {\n  // console.log('Starting highlight for elements:', elements);\n  \n  // Create overlay if it doesn't exist\n  let overlay = document.getElementById('highlight-overlay');\n  if (!overlay) {\n    overlay = document.createElement('div');\n    overlay.id = 'highlight-overlay';\n    overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 10000;\n    `;\n    document.body.appendChild(overlay);\n  }\n  \n  const getElementByXPath = (xpath) => {\n    const element = document.evaluate(\n      xpath, \n      document, \n      null, \n      XPathResult.FIRST_ORDERED_NODE_TYPE, \n      null\n    ).singleNodeValue;\n    \n    if (!element) {\n      console.warn('Failed to find element with xpath:', xpath);\n    }\n    return element;\n  };\n\n  const updateHighlights = () => {\n    overlay.innerHTML = '';\n    \n    elements.forEach(elementInfo => {\n      const element = getElementByXPath(elementInfo.xpath);\n      if (!element) return;\n\n      const rect = element.getBoundingClientRect();\n      // console.log('Element rect:', elementInfo.tag, rect);\n      \n      if (rect.width === 0 || rect.height === 0) {\n        console.warn('Element has zero dimensions:', elementInfo);\n        return;\n      }\n      \n      // Create border highlight (red rectangle)\n      const highlight = document.createElement('div');\n      highlight.style.cssText = `\n        position: fixed;\n        left: ${rect.x}px;\n        top: ${rect.y}px;\n        width: ${rect.width}px;\n        height: ${rect.height}px;\n        border: 1px solid rgb(255, 0, 0);\n        transition: all 0.2s ease-in-out;\n      `;\n\n      // Create index label container - now positioned to the right and slightly up\n      const labelContainer = document.createElement('div');\n      labelContainer.style.cssText = `\n        position: absolute;\n        right: -10px;     /* Offset to the right */\n        top: -10px;       /* Offset upwards */\n        padding: 4px;\n        background-color: rgba(255, 255, 0, 0.6);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n\n      const text = document.createElement('span');\n      text.style.cssText = `\n        color: rgb(0, 0, 0, 0.8);\n        font-family: 'Courier New', Courier, monospace;\n        font-size: 12px;\n        font-weight: bold;\n        line-height: 1;\n      `;\n      text.textContent = elementInfo.index;\n      \n      labelContainer.appendChild(text);\n      highlight.appendChild(labelContainer);\n      overlay.appendChild(highlight);\n    });\n  };\n\n  // Initial highlight\n  updateHighlights();\n\n  // Update highlights on scroll and resize\n  const scrollHandler = () => {\n    requestAnimationFrame(updateHighlights);\n  };\n  \n  window.addEventListener('scroll', scrollHandler, true);\n  window.addEventListener('resize', updateHighlights);\n\n  // Store event handlers for cleanup\n  overlay.scrollHandler = scrollHandler;\n  overlay.updateHighlights = updateHighlights;\n}\n\nfunction unexecute() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    // Remove event listeners\n    window.removeEventListener('scroll', overlay.scrollHandler, true);\n    window.removeEventListener('resize', overlay.updateHighlights);\n    overlay.remove();\n  }\n}\n\n// Make it available globally for both Extension and Playwright\nif (typeof window !== 'undefined') {\n  window.ProboLabs = {\n    ElementTag,\n    highlight,\n    unhighlightElements,\n    findElements,\n    highlightElements\n  };\n}\n\n\n"],"names":["ElementTag","CLICKABLE","FILLABLE","SELECTABLE","NON_INTERACTIVE_ELEMENT","ElementInfo","constructor","element","index","tag","type","text","html","xpath","css_selector","bounding_box","this","toString","generateXPath","id","parts","current","nodeType","Node","ELEMENT_NODE","sibling","previousSibling","tagName","toLowerCase","unshift","parentNode","join","getElementInfo","rect","getBoundingClientRect","boundingBox","x","y","width","height","textContent","trim","rawHTML","doc","DOMParser","parseFromString","Array","from","body","children","forEach","cleanElement","allowedAttributes","Set","attributes","attr","name","value","isTestAttribute","test","isDataAttribute","startsWith","isBooleanAttribute","includes","has","removeAttribute","innerHTML","length","remove","cleanHTML","outerHTML","el","path","selector","nodeName","nth","previousElementSibling","getCssPath","filterZeroDimensions","elementInfo","hasSize","style","window","getComputedStyle","isVisible","display","visibility","isConnected","uniquifyElements","elements","seen","console","log","nonZeroElements","filter","sort","a","b","add","filteredByParent","parentXPath","segments","split","i","parentPath","slice","findClosestParent","keep","result","parentSegments","isFormControl","isDropdownItem","shouldKeepNestedElement","filteredResults","some","other","indexOf","areElementsOverlapping","map","element1","element2","box1","box2","hasMatchingClass","className","pattern","hasMatchingRole","getAttribute","findDropdowns","dropdowns","push","document","querySelectorAll","dropdownPattern","dropdownClasses","hasDropdownClass","validTag","findClickables","clickables","links","buttons","inputButtons","roleButtons","tabbable","clickHandlers","checkboxes","radios","toggles","findToggles","pointerElements","allElements","SVGElement","cursor","findElementsWithPointer","togglePattern","checkbox","isToggle","parent","parentElement","role","nextSibling","nextElementSibling","highlight","execute","async","elementTypes","findElements","highlightElements","unexecute","overlay","getElementById","unhighlightElements","typesArray","isArray","elementType","inputs","textareas","editables","firstElementChild","uniqueElements","info","createElement","cssText","appendChild","updateHighlights","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","warn","getElementByXPath","labelContainer","scrollHandler","requestAnimationFrame","addEventListener","ProboLabs"],"mappings":"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"}