{"version":3,"file":"probolabs.umd.js","sources":["../src/highlight.js"],"sourcesContent":["// Public API\nexport const ElementTag = {\n  INPUT_TEXT: 'INPUT_TEXT',\n  TEXTAREA: 'TEXTAREA',\n  INPUT_SELECT: 'INPUT_SELECT',\n  INPUT_CHECKBOX: 'INPUT_CHECKBOX',\n  INPUT_RADIO: 'INPUT_RADIO',\n  BUTTON: 'BUTTON',\n  LINK: 'LINK',\n  TOGGLE_SWITCH: 'TOGGLE_SWITCH',\n  NON_INTERACTIVE_ELEMENT: 'NON_INTERACTIVE_ELEMENT'\n};\n\nexport const highlight = {\n  execute: async function(elementTypes) {\n    const elements = await findElements(elementTypes);\n    highlightElements(elements);\n    return elements;\n  },\n\n  unexecute: function() {\n    const overlay = document.getElementById('highlight-overlay');\n    if (overlay) {\n      overlay.remove();\n    }\n  },\n\n  getElementInfo\n};\n\n// Helper function that's also useful publicly\nfunction getElementInfo(element, index) {\n  // Get CSS selector\n  const getCssPath = (el) => {\n    const path = [];\n    while (el.nodeType === Node.ELEMENT_NODE) {\n      let selector = el.nodeName.toLowerCase();\n      if (el.id) {\n        selector = `#${el.id}`;\n        path.unshift(selector);\n        break;\n      } else {\n        let sibling = el;\n        let nth = 1;\n        while (sibling = sibling.previousElementSibling) {\n          if (sibling.nodeName.toLowerCase() === selector) nth++;\n        }\n        if (nth > 1) selector += `:nth-of-type(${nth})`;\n      }\n      path.unshift(selector);\n      el = el.parentNode;\n    }\n    return path.join(' > ');\n  };\n\n  // Get XPath\n  const getXPath = (el) => {\n    if (!el) return '';\n    if (el.id) return `//*[@id=\"${el.id}\"]`;\n    \n    const path = [];\n    while (el && el.nodeType === Node.ELEMENT_NODE) {\n      let selector = el.nodeName.toLowerCase();\n      let sibling = el;\n      let siblingCount = 0;\n      \n      while (sibling = sibling.previousElementSibling) {\n        if (sibling.nodeName.toLowerCase() === selector) siblingCount++;\n      }\n      \n      if (siblingCount) {\n        selector += `[${siblingCount + 1}]`;\n      }\n      \n      path.unshift(selector);\n      el = el.parentNode;\n    }\n    \n    return '/' + path.join('/');\n  };\n\n  // Get bounding box\n  const rect = element.getBoundingClientRect();\n  \n  return {\n    // Required fields (matching Python model)\n    index: index.toString(),\n    html: element.outerHTML,\n    xpath: getXPath(element),\n    text: element.textContent?.trim() || '',\n    \n    // Optional fields\n    tag: element.tagName.toLowerCase(),\n    type: element.getAttribute('type') || '',\n    css_selector: getCssPath(element),\n    bounding_box: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  };\n}\n\n// Private helper functions\nfunction uniquifyElements(elements, shortestPrefix = false) {\n  // Helper to get xpath for an element\n  const getXPath = (el) => {\n    if (!el) return '';\n    if (el.id) return `//*[@id=\"${el.id}\"]`;\n    \n    const path = [];\n    while (el && el.nodeType === Node.ELEMENT_NODE) {\n      let selector = el.nodeName.toLowerCase();\n      let sibling = el;\n      let siblingCount = 0;\n      \n      while (sibling = sibling.previousElementSibling) {\n        if (sibling.nodeName.toLowerCase() === selector) siblingCount++;\n      }\n      \n      if (siblingCount) {\n        selector += `[${siblingCount + 1}]`;\n      }\n      \n      path.unshift(selector);\n      el = el.parentNode;\n    }\n    \n    return '/' + path.join('/');\n  };\n\n  // Get all xpaths and their depths\n  const elementXPaths = elements.map(el => ({\n    element: el,\n    xpath: getXPath(el),\n    depth: getXPath(el).split('/').length\n  }));\n\n  if (shortestPrefix) {\n    // Sort by xpath depth to process shorter paths first\n    elementXPaths.sort((a, b) => a.depth - b.depth);\n    \n    const seen = new Set();\n    const uniqueElements = [];\n    \n    // Only add elements whose xpath isn't a prefix of any already seen xpath\n    for (const {element, xpath} of elementXPaths) {\n      if (!Array.from(seen).some(seenXPath => xpath.startsWith(seenXPath))) {\n        seen.add(xpath);\n        uniqueElements.push(element);\n      }\n    }\n    \n    return uniqueElements;\n  } else {\n    // Original behavior - just remove exact duplicates\n    const seen = new Set();\n    return elementXPaths\n      .filter(({xpath}) => {\n        if (!seen.has(xpath)) {\n          seen.add(xpath);\n          return true;\n        }\n        return false;\n      })\n      .map(({element}) => element);\n  }\n}\n\nfunction findDropdowns() {\n  const dropdowns = [];\n  \n  // Native select elements\n  dropdowns.push(...document.querySelectorAll('select'));\n  \n  // Elements with dropdown roles\n  dropdowns.push(...document.querySelectorAll('[role=\"combobox\"], [role=\"listbox\"], [role=\"dropdown\"]'));\n  \n  // Common dropdown class patterns\n  const dropdownPattern = /dropdown|select|combobox/i;\n  const elements = document.querySelectorAll('*');\n  const dropdownClasses = Array.from(elements).filter(el => {\n    const hasDropdownClass = dropdownPattern.test(el.className);\n    const validTag = ['li', 'ul', 'span', 'div', 'p'].includes(el.tagName.toLowerCase());\n    return hasDropdownClass && validTag;\n  });\n  dropdowns.push(...dropdownClasses);\n  \n  // Elements with aria-haspopup attribute\n  dropdowns.push(...document.querySelectorAll('[aria-haspopup=\"true\"], [aria-haspopup=\"listbox\"]'));\n\n  dropdowns.push(...document.querySelectorAll('nav ul li'));\n\n  // Use uniquifyElements with shortest prefix option\n  return uniquifyElements(dropdowns, true);\n}\n\nfunction findClickables() {\n  const clickables = [];\n  \n  // <a> tags with href\n  clickables.push(...document.querySelectorAll('a[href]'));\n  \n  // <button> elements\n  clickables.push(...document.querySelectorAll('button'));\n  \n  // input[type=\"button\"], input[type=\"submit\"], etc.\n  clickables.push(...document.querySelectorAll('input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]'));\n  \n  // Elements with role=\"button\"\n  clickables.push(...document.querySelectorAll('[role=\"button\"]'));\n  \n  // Elements with tabindex=\"0\"\n  clickables.push(...document.querySelectorAll('[tabindex=\"0\"]'));\n  \n  // Elements with onclick handlers\n  clickables.push(...document.querySelectorAll('[onclick]'));\n  \n  // Also include dropdowns\n  clickables.push(...findDropdowns());\n  \n  // Table rows that have role='row' + 'clickable' in class\n  const clickableRows = Array.from(document.querySelectorAll('[role=\"row\"]'))\n    .filter(el => /clickable/i.test(el.className));\n  clickables.push(...clickableRows);\n  \n  return uniquifyElements(clickables);\n}\n\nfunction findToggles() {\n  const toggles = [];\n  const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n  const togglePattern = /switch|toggle|slider/i;\n  \n  checkboxes.forEach(checkbox => {\n    let isToggle = false;\n    \n    // 1. Check the checkbox's own class and role\n    if (togglePattern.test(checkbox.className) || togglePattern.test(checkbox.getAttribute('role') || '')) {\n      isToggle = true;\n    }\n    \n    // 2. Check up to 3 parent levels\n    if (!isToggle) {\n      let current = checkbox;\n      for (let i = 0; i < 3; i++) {\n        const parent = current.parentElement;\n        if (!parent) break;\n        const parentClasses = parent.className || '';\n        const parentRole = parent.getAttribute('role') || '';\n        if (togglePattern.test(parentClasses) || togglePattern.test(parentRole)) {\n          isToggle = true;\n          break;\n        }\n        current = parent;\n      }\n    }\n    \n    // 3. Check next sibling\n    if (!isToggle) {\n      const sibling = checkbox.nextElementSibling;\n      if (sibling) {\n        const siblingClasses = sibling.className || '';\n        const siblingRole = sibling.getAttribute('role') || '';\n        if (togglePattern.test(siblingClasses) || togglePattern.test(siblingRole)) {\n          isToggle = true;\n        }\n      }\n    }\n    \n    if (isToggle) toggles.push(checkbox);\n  });\n  \n  return uniquifyElements(toggles);\n}\n\nfunction findNonInteractiveElements() {\n  // Get all elements in the document\n  const all = Array.from(document.querySelectorAll('*'));\n  \n  // Filter elements based on Python implementation rules\n  return all.filter(element => {\n    // Check if element is a leaf node (no children)\n    if (!element.firstElementChild) {\n      const tag = element.tagName.toLowerCase();\n      // Check if element is not interactive (matching Python exclusions)\n      if (!['select', 'button', 'a'].includes(tag)) {\n        // Check if element is a text or image element (matching Python inclusions)\n        return ['p', 'span', 'div', 'input', 'textarea'].includes(tag);\n      }\n    }\n    return false;\n  });\n}\n\nasync function findElements(elementTypes) {\n  const typesArray = Array.isArray(elementTypes) ? elementTypes : [elementTypes];\n  console.log('🔍 Starting element search for types:', typesArray);\n\n  const elements = [];\n  typesArray.forEach(elementType => {\n    if (elementType === ElementTag.INPUT_TEXT || elementType === ElementTag.TEXTAREA) {\n      elements.push(...document.querySelectorAll('input'));\n      elements.push(...document.querySelectorAll('textarea'));\n      elements.push(...document.querySelectorAll('[contenteditable=\"true\"]'));\n    }\n    if (elementType === ElementTag.INPUT_SELECT) {\n      elements.push(...findDropdowns());\n    }\n    if (elementType === ElementTag.INPUT_CHECKBOX) {\n      elements.push(...document.querySelectorAll('input[type=\"checkbox\"]'));\n    }\n    if (elementType === ElementTag.INPUT_RADIO) {\n      elements.push(...document.querySelectorAll('input[type=\"radio\"]'));\n    }\n    if (elementType === ElementTag.BUTTON || elementType === ElementTag.LINK) {\n      elements.push(...findClickables());\n    }\n    if (elementType === ElementTag.LINK) {\n      elements.push(...document.querySelectorAll('a'));\n    }\n    if (elementType === ElementTag.TOGGLE_SWITCH) {\n      elements.push(...findToggles());\n    }\n    if (elementType === ElementTag.NON_INTERACTIVE_ELEMENT) {\n      elements.push(...findNonInteractiveElements());\n    }\n  });\n\n  const uniqueElements = uniquifyElements(elements);\n  \n  // Add index to each element's info\n  const elementsWithInfo = uniqueElements.map((element, index) => \n    getElementInfo(element, index)\n  );\n  \n  console.log(`Found ${elementsWithInfo.length} elements:`);\n  elementsWithInfo.forEach(info => {\n    console.log(`Element ${info.index}:`, info);\n  });\n\n  return elementsWithInfo;\n}\n\nfunction highlightElements(elements) {\n  console.log('🔍 Highlighting elements CHANGED');\n  // Remove any existing overlay\n  const existingOverlay = document.getElementById('highlight-overlay');\n  if (existingOverlay) existingOverlay.remove();\n\n  // Create overlay container\n  const overlay = document.createElement('div');\n  overlay.id = 'highlight-overlay';\n  overlay.style.cssText = `\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: 10000;\n  `;\n  document.body.appendChild(overlay);\n\n  // Function to get element by XPath\n  const getElementByXPath = (xpath) => {\n    return document.evaluate(\n      xpath, \n      document, \n      null, \n      XPathResult.FIRST_ORDERED_NODE_TYPE, \n      null\n    ).singleNodeValue;\n  };\n\n  // Function to update highlight positions\n  const updateHighlights = () => {\n    overlay.innerHTML = '';\n    \n    elements.forEach(elementInfo => {\n      const element = getElementByXPath(elementInfo.xpath);\n      if (!element) return;\n\n      const rect = element.getBoundingClientRect();\n      \n      // Create border highlight (red rectangle)\n      const highlight = document.createElement('div');\n      highlight.style.cssText = `\n        position: fixed;\n        left: ${rect.x}px;\n        top: ${rect.y}px;\n        width: ${rect.width}px;\n        height: ${rect.height}px;\n        border: 1px solid rgb(255, 0, 0);\n        transition: all 0.2s ease-in-out;\n      `;\n\n      // Create index label container - now positioned to the right and slightly up\n      const labelContainer = document.createElement('div');\n      labelContainer.style.cssText = `\n        position: absolute;\n        right: -4px;     /* Offset to the right */\n        top: -4px;       /* Offset upwards */\n        padding: 4px;\n        background-color: rgb(255, 255, 0);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n\n      const text = document.createElement('span');\n      text.style.cssText = `\n        color: rgb(0, 0, 0);\n        font-family: Arial, sans-serif;\n        font-size: 12px;\n        line-height: 1;\n      `;\n      text.textContent = elementInfo.index;\n      \n      labelContainer.appendChild(text);\n      highlight.appendChild(labelContainer);\n      overlay.appendChild(highlight);\n    });\n  };\n\n  // Initial highlight\n  updateHighlights();\n\n  // Update highlights on scroll and resize\n  const scrollHandler = () => {\n    requestAnimationFrame(updateHighlights);\n  };\n  \n  window.addEventListener('scroll', scrollHandler, true);\n  window.addEventListener('resize', updateHighlights);\n\n  // Store event handlers for cleanup\n  overlay.scrollHandler = scrollHandler;\n  overlay.updateHighlights = updateHighlights;\n}\n\nfunction unexecute() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    // Remove event listeners\n    window.removeEventListener('scroll', overlay.scrollHandler, true);\n    window.removeEventListener('resize', overlay.updateHighlights);\n    overlay.remove();\n  }\n}\n\n// Make it available globally for both Extension and Playwright\nif (typeof window !== 'undefined') {\n  window.ProboLabs = {\n    ElementTag,\n    highlight\n  };\n}\n\n"],"names":["ElementTag","INPUT_TEXT","TEXTAREA","INPUT_SELECT","INPUT_CHECKBOX","INPUT_RADIO","BUTTON","LINK","TOGGLE_SWITCH","NON_INTERACTIVE_ELEMENT","highlight","execute","async","elementTypes","elements","typesArray","Array","isArray","console","log","forEach","elementType","push","document","querySelectorAll","findDropdowns","clickables","clickableRows","from","filter","el","test","className","uniquifyElements","findClickables","toggles","checkboxes","togglePattern","checkbox","isToggle","getAttribute","current","i","parent","parentElement","parentClasses","parentRole","sibling","nextElementSibling","siblingClasses","siblingRole","findToggles","element","firstElementChild","tag","tagName","toLowerCase","includes","uniqueElements","elementsWithInfo","map","index","getElementInfo","length","info","findElements","existingOverlay","getElementById","remove","overlay","createElement","id","style","cssText","body","appendChild","getElementByXPath","xpath","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","updateHighlights","innerHTML","elementInfo","rect","getBoundingClientRect","x","y","width","height","labelContainer","text","textContent","scrollHandler","requestAnimationFrame","window","addEventListener","highlightElements","unexecute","toString","html","outerHTML","path","nodeType","Node","ELEMENT_NODE","selector","nodeName","siblingCount","previousElementSibling","unshift","parentNode","join","getXPath","trim","type","css_selector","nth","getCssPath","bounding_box","shortestPrefix","elementXPaths","depth","split","sort","a","b","seen","Set","some","seenXPath","startsWith","add","has","dropdowns","dropdownPattern","dropdownClasses","hasDropdownClass","validTag","ProboLabs"],"mappings":"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"}