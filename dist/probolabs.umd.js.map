{"version":3,"file":"probolabs.umd.js","sources":["../src/constants.js","../src/utils.js","../src/finders.js","../src/highlight.js"],"sourcesContent":["export const ElementTag = {\n  CLICKABLE: \"CLICKABLE\", // button, link, toggle switch, checkbox, radio, dropdowns, clickable divs\n  FILLABLE: \"FILLABLE\", // input, textarea content_editable, date picker??\n  SELECTABLE: \"SELECTABLE\", // select\n  NON_INTERACTIVE_ELEMENT: 'NON_INTERACTIVE_ELEMENT',\n};\n\nexport class ElementInfo {\n  constructor(element, index, {tag, type, text, html, xpath, css_selector, bounding_box}) {\n    this.index = index.toString();\n    this.tag = tag;\n    this.type = type;\n    this.text = text;\n    this.html = html;\n    this.xpath = xpath;\n    this.css_selector = css_selector;\n    this.bounding_box = bounding_box;\n    this.element = element;\n  }\n}\n","import { ElementInfo } from './constants';\nexport function generateXPath(element) {\n  if (!element) return '';\n  \n  // If element has an id, use that (it's unique and shorter)\n  if (element.id) {\n    return `//*[@id=\"${element.id}\"]`;\n  }\n  \n  const parts = [];\n  let current = element;\n  \n  while (current && current.nodeType === Node.ELEMENT_NODE) {\n    let index = 1;\n    let sibling = current.previousSibling;\n    \n    while (sibling) {\n      if (sibling.nodeType === Node.ELEMENT_NODE && sibling.tagName === current.tagName) {\n        index++;\n      }\n      sibling = sibling.previousSibling;\n    }\n    \n    const tagName = current.tagName.toLowerCase();\n    parts.unshift(`${tagName}[${index}]`);\n    current = current.parentNode;\n  }\n  \n  return '/' + parts.join('/');\n}\n\nexport function getElementInfo(element, index) {\n  // Get CSS selector\n  const getCssPath = (el) => {\n    const path = [];\n    while (el.nodeType === Node.ELEMENT_NODE) {\n      let selector = el.nodeName.toLowerCase();\n      if (el.id) {\n        selector = `#${el.id}`;\n        path.unshift(selector);\n        break;\n      } else {\n        let sibling = el;\n        let nth = 1;\n        while (sibling = sibling.previousElementSibling) {\n          if (sibling.nodeName.toLowerCase() === selector) nth++;\n        }\n        if (nth > 1) selector += `:nth-of-type(${nth})`;\n      }\n      path.unshift(selector);\n      el = el.parentNode;\n    }\n    return path.join(' > ');\n  };\n\n  // Get bounding box\n  const rect = element.getBoundingClientRect();\n  const boundingBox = {\n    x: rect.x,\n    y: rect.y,\n    width: rect.width,\n    height: rect.height\n  };\n\n  // Return element info with pre-calculated values\n  return new ElementInfo(element, index, {\n    tag: element.tagName.toLowerCase(),\n    type: element.type || '',\n    text: element.textContent.trim(),\n    html: element.outerHTML,\n    xpath: generateXPath(element),\n    css_selector: getCssPath(element),\n    bounding_box: boundingBox\n  });\n}\n\nfunction shouldKeepNestedElement(element) {\n  // 1. ARIA roles (highest priority - framework agnostic)\n  const role = element.getAttribute('role');\n  if (role === 'menuitem') {\n    return true;\n  }\n\n  // 2. Common menu/dropdown patterns\n  if (element.matches([\n    // Generic dropdown patterns\n    '.dropdown > summary',\n    '.dropdown-menu > li > a',\n    '.dropdown-content li > a',\n    // Menu patterns\n    'ul.menu li > a',\n    '.menu-list li > a'\n  ].join(','))) {\n    return true;\n  }\n\n  // 3. Framework-specific classes\n  const className = element.className;\n  const keepClasses = [\n    'dropdown-item',    // Bootstrap\n    'menu-item',       // Generic\n    'dropdown-link'    // Generic\n  ];\n  \n  if (keepClasses.some(cls => className.includes(cls))) {\n    return true;\n  }\n\n  // 4. Parent context check\n  const parentMenu = element.closest('.dropdown, .menu, .dropdown-menu');\n  if (parentMenu && element.tagName.toLowerCase() === 'a') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction hasSeenParent(seen, xpath) {\n  // Check if we've seen any parent of this element\n  for (const seenPath of seen) {\n    if (xpath.startsWith(seenPath) && xpath !== seenPath) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function uniquifyElements(elements) {\n  const seen = new Set();\n  const result = [];\n  \n  // First sort by xpath length to process parents before children\n  elements.sort((a, b) => a.xpath.length - b.xpath.length);\n  \n  // First pass - collect all elements as before\n  elements.forEach(element => {\n    if (!hasSeenParent(seen, element.xpath) || shouldKeepNestedElement(element.element)) {\n      seen.add(element.xpath);\n      result.push(element);\n    }\n  });\n  \n  // Second pass - remove elements that share the same space\n  return result.filter((element, index) => {\n    // Look for other elements that might be overlapping\n    const overlapping = result.find((other, otherIndex) => {\n      if (index === otherIndex) return false;\n      \n      const box1 = element.bounding_box;\n      const box2 = other.bounding_box;\n      \n      return (\n        // Same dimensions and position\n        box1.x === box2.x &&\n        box1.y === box2.y &&\n        box1.width === box2.width &&\n        box1.height === box2.height &&\n        // Same text content\n        element.text === other.text &&\n        // Prefer 'a' tags over other elements\n        other.tag === 'a'\n      );\n    });\n    \n    // Keep this element if:\n    // 1. No overlapping element found, or\n    // 2. This is the 'a' tag (and not the li)\n    return !overlapping || element.tag === 'a';\n  });\n}\n","import { uniquifyElements } from './utils';\nexport function findDropdowns() {\n  const dropdowns = [];\n  \n  // Native select elements\n  dropdowns.push(...document.querySelectorAll('select'));\n  \n  // Elements with dropdown roles\n  dropdowns.push(...document.querySelectorAll('[role=\"combobox\"], [role=\"listbox\"], [role=\"dropdown\"]'));\n  \n  // Common dropdown class patterns\n  const dropdownPattern = /.*(dropdown|select|combobox).*/i;\n  const elements = document.querySelectorAll('*');\n  const dropdownClasses = Array.from(elements).filter(el => {\n    const hasDropdownClass = dropdownPattern.test(el.className);\n    const validTag = ['li', 'ul', 'span', 'div', 'p'].includes(el.tagName.toLowerCase());\n    const result = hasDropdownClass && validTag;\n    return result;\n  });\n  dropdowns.push(...dropdownClasses);\n  \n  // Elements with aria-haspopup attribute\n  dropdowns.push(...document.querySelectorAll('[aria-haspopup=\"true\"], [aria-haspopup=\"listbox\"]'));\n\n  dropdowns.push(...document.querySelectorAll('nav ul li'));\n\n  return dropdowns;\n}\n\nexport function findClickables() {\n  const clickables = [];\n  \n  // Collect all clickable elements first\n  const links = [...document.querySelectorAll('a[href]')];\n  const buttons = [...document.querySelectorAll('button')];\n  const inputButtons = [...document.querySelectorAll('input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]')];\n  const roleButtons = [...document.querySelectorAll('[role=\"button\"]')];\n  const tabbable = [...document.querySelectorAll('[tabindex=\"0\"]')];\n  const clickHandlers = [...document.querySelectorAll('[onclick]')];\n  const dropdowns = findDropdowns();\n  const checkboxes = [...document.querySelectorAll('input[type=\"checkbox\"]')];\n  const radios = [...document.querySelectorAll('input[type=\"radio\"]')];\n  const toggles = findToggles();\n  \n  // Add all elements at once\n  clickables.push(\n    ...links,\n    ...buttons,\n    ...inputButtons,\n    ...roleButtons,\n    ...tabbable,\n    ...clickHandlers,\n    ...dropdowns,\n    ...checkboxes,\n    ...radios,\n    ...toggles\n  );\n\n  // Only uniquify once at the end\n  return clickables;  // Let findElements handle the uniquification\n}\n\nexport function findToggles() {\n  const toggles = [];\n  const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n  const togglePattern = /switch|toggle|slider/i;\n  \n  checkboxes.forEach(checkbox => {\n    let isToggle = false;\n    \n    // 1. Check the checkbox's own class and role\n    if (togglePattern.test(checkbox.className) || togglePattern.test(checkbox.getAttribute('role') || '')) {\n      isToggle = true;\n    }\n    \n    // 2. Check up to 3 parent levels\n    if (!isToggle) {\n      let current = checkbox;\n      for (let i = 0; i < 3; i++) {\n        const parent = current.parentElement;\n        if (!parent) break;\n        const parentClasses = parent.className || '';\n        const parentRole = parent.getAttribute('role') || '';\n        if (togglePattern.test(parentClasses) || togglePattern.test(parentRole)) {\n          isToggle = true;\n          break;\n        }\n        current = parent;\n      }\n    }\n    \n    // 3. Check next sibling\n    if (!isToggle) {\n      const sibling = checkbox.nextElementSibling;\n      if (sibling) {\n        const siblingClasses = sibling.className || '';\n        const siblingRole = sibling.getAttribute('role') || '';\n        if (togglePattern.test(siblingClasses) || togglePattern.test(siblingRole)) {\n          isToggle = true;\n        }\n      }\n    }\n    \n    if (isToggle) toggles.push(checkbox);\n  });\n  \n  return toggles;\n}\n\nexport function findNonInteractiveElements() {\n  // Get all elements in the document\n  const all = Array.from(document.querySelectorAll('*'));\n  \n  // Filter elements based on Python implementation rules\n  return all.filter(element => {\n    // Check if element is a leaf node (no children)\n    if (!element.firstElementChild) {\n      const tag = element.tagName.toLowerCase();\n      // Check if element is not interactive (matching Python exclusions)\n      if (!['select', 'button', 'a'].includes(tag)) {\n        // Check if element is a text or image element (matching Python inclusions)\n        return ['p', 'span', 'div', 'input', 'textarea'].includes(tag);\n      }\n    }\n    return false;\n  });\n}\n","import { ElementTag } from './constants';\nimport { findDropdowns, findClickables, findToggles, findNonInteractiveElements } from './finders';\nimport { uniquifyElements, getElementInfo } from './utils';\n\nexport const highlight = {\n  execute: async function(elementTypes) {\n    const elements = await findElements(elementTypes);\n    highlightElements(elements);\n    return elements;\n  },\n\n  unexecute: function() {\n    const overlay = document.getElementById('highlight-overlay');\n    if (overlay) {\n      overlay.remove();\n    }\n  },\n\n  getElementInfo\n};\n\n\nexport function unhighlightElements() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\n\n\n\nexport async function findElements(elementTypes) {\n  const typesArray = Array.isArray(elementTypes) ? elementTypes : [elementTypes];\n  console.log('🔍 Starting element search for types:', typesArray);\n\n  const elements = [];\n  typesArray.forEach(elementType => {\n    if (elementType === ElementTag.FILLABLE) {\n      const inputs = [...document.querySelectorAll('input:not([type=\"radio\"]):not([type=\"checkbox\"])')];\n      console.log('Found inputs:', inputs.length, inputs);\n      elements.push(...inputs);\n      \n      const textareas = [...document.querySelectorAll('textarea')];\n      console.log('Found textareas:', textareas.length);\n      elements.push(...textareas);\n      \n      const editables = [...document.querySelectorAll('[contenteditable=\"true\"]')];\n      console.log('Found editables:', editables.length);\n      elements.push(...editables);\n    }\n    if (elementType === ElementTag.SELECTABLE) {\n      elements.push(...findDropdowns());\n    }\n    if (elementType === ElementTag.CLICKABLE) {\n      elements.push(...findClickables());\n      elements.push(...findToggles());\n      elements.push(...document.querySelectorAll('input[type=\"checkbox\"]'));\n      elements.push(...document.querySelectorAll('input[type=\"radio\"]'));\n    }\n    if (elementType === ElementTag.NON_INTERACTIVE_ELEMENT) {\n      elements.push(...findNonInteractiveElements());\n    }\n  });\n\n  // console.log('Before uniquify:', elements.length);\n  const elementsWithInfo = elements.map((element, index) => \n    getElementInfo(element, index)\n  );\n  \n  const uniqueElements = uniquifyElements(elementsWithInfo);\n  console.log(`Found ${uniqueElements.length} elements:`);\n  uniqueElements.forEach(info => {\n    console.log(`Element ${info.index}:`, info);\n  });\n  \n  return uniqueElements;\n}\n\n// elements is an array of objects with index, xpath\nexport function highlightElements(elements) {\n  // console.log('Starting highlight for elements:', elements);\n  \n  // Create overlay if it doesn't exist\n  let overlay = document.getElementById('highlight-overlay');\n  if (!overlay) {\n    overlay = document.createElement('div');\n    overlay.id = 'highlight-overlay';\n    overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 10000;\n    `;\n    document.body.appendChild(overlay);\n  }\n  \n  const getElementByXPath = (xpath) => {\n    const element = document.evaluate(\n      xpath, \n      document, \n      null, \n      XPathResult.FIRST_ORDERED_NODE_TYPE, \n      null\n    ).singleNodeValue;\n    \n    if (!element) {\n      console.warn('Failed to find element with xpath:', xpath);\n    }\n    return element;\n  };\n\n  const updateHighlights = () => {\n    overlay.innerHTML = '';\n    \n    elements.forEach(elementInfo => {\n      const element = getElementByXPath(elementInfo.xpath);\n      if (!element) return;\n\n      const rect = element.getBoundingClientRect();\n      // console.log('Element rect:', elementInfo.tag, rect);\n      \n      if (rect.width === 0 || rect.height === 0) {\n        console.warn('Element has zero dimensions:', elementInfo);\n        return;\n      }\n      \n      // Create border highlight (red rectangle)\n      const highlight = document.createElement('div');\n      highlight.style.cssText = `\n        position: fixed;\n        left: ${rect.x}px;\n        top: ${rect.y}px;\n        width: ${rect.width}px;\n        height: ${rect.height}px;\n        border: 1px solid rgb(255, 0, 0);\n        transition: all 0.2s ease-in-out;\n      `;\n\n      // Create index label container - now positioned to the right and slightly up\n      const labelContainer = document.createElement('div');\n      labelContainer.style.cssText = `\n        position: absolute;\n        right: -4px;     /* Offset to the right */\n        top: -4px;       /* Offset upwards */\n        padding: 4px;\n        background-color: rgb(255, 255, 0);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n\n      const text = document.createElement('span');\n      text.style.cssText = `\n        color: rgb(0, 0, 0);\n        font-family: Arial, sans-serif;\n        font-size: 12px;\n        line-height: 1;\n      `;\n      text.textContent = elementInfo.index;\n      \n      labelContainer.appendChild(text);\n      highlight.appendChild(labelContainer);\n      overlay.appendChild(highlight);\n    });\n  };\n\n  // Initial highlight\n  updateHighlights();\n\n  // Update highlights on scroll and resize\n  const scrollHandler = () => {\n    requestAnimationFrame(updateHighlights);\n  };\n  \n  window.addEventListener('scroll', scrollHandler, true);\n  window.addEventListener('resize', updateHighlights);\n\n  // Store event handlers for cleanup\n  overlay.scrollHandler = scrollHandler;\n  overlay.updateHighlights = updateHighlights;\n}\n\nfunction unexecute() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    // Remove event listeners\n    window.removeEventListener('scroll', overlay.scrollHandler, true);\n    window.removeEventListener('resize', overlay.updateHighlights);\n    overlay.remove();\n  }\n}\n\n// Make it available globally for both Extension and Playwright\nif (typeof window !== 'undefined') {\n  window.ProboLabs = {\n    ElementTag,\n    highlight,\n    unhighlightElements,\n    findElements,\n    highlightElements\n  };\n}\n\n\n"],"names":["ElementTag","CLICKABLE","FILLABLE","SELECTABLE","NON_INTERACTIVE_ELEMENT","ElementInfo","constructor","element","index","tag","type","text","html","xpath","css_selector","bounding_box","this","toString","generateXPath","id","parts","current","nodeType","Node","ELEMENT_NODE","sibling","previousSibling","tagName","toLowerCase","unshift","parentNode","join","getElementInfo","rect","getBoundingClientRect","boundingBox","x","y","width","height","textContent","trim","outerHTML","el","path","selector","nodeName","nth","previousElementSibling","getCssPath","findDropdowns","dropdowns","push","document","querySelectorAll","dropdownPattern","elements","dropdownClasses","Array","from","filter","hasDropdownClass","test","className","validTag","includes","findToggles","toggles","checkboxes","togglePattern","forEach","checkbox","isToggle","getAttribute","i","parent","parentElement","parentClasses","parentRole","nextElementSibling","siblingClasses","siblingRole","highlight","execute","async","elementTypes","findElements","highlightElements","unexecute","overlay","getElementById","remove","unhighlightElements","typesArray","isArray","console","log","elementType","inputs","length","textareas","editables","clickables","links","buttons","inputButtons","roleButtons","tabbable","clickHandlers","radios","findClickables","firstElementChild","uniqueElements","seen","Set","result","sort","a","b","seenPath","startsWith","hasSeenParent","matches","some","cls","closest","shouldKeepNestedElement","add","find","other","otherIndex","box1","box2","uniquifyElements","map","info","createElement","style","cssText","body","appendChild","updateHighlights","innerHTML","elementInfo","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","warn","getElementByXPath","labelContainer","scrollHandler","requestAnimationFrame","window","addEventListener","ProboLabs"],"mappings":"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"}