{"version":3,"file":"probolabs.esm.js","sources":["../src/constants.js","../src/utils.js","../src/finders.js","../src/highlight.js"],"sourcesContent":["export const ElementTag = {\n  CLICKABLE: \"CLICKABLE\", // button, link, toggle switch, checkbox, radio, dropdowns, clickable divs\n  FILLABLE: \"FILLABLE\", // input, textarea content_editable, date picker??\n  SELECTABLE: \"SELECTABLE\", // select\n  NON_INTERACTIVE_ELEMENT: 'NON_INTERACTIVE_ELEMENT',\n};\n\nexport class ElementInfo {\n  constructor(element, index, {tag, type, text, html, xpath, css_selector, bounding_box}) {\n    this.index = index.toString();\n    this.tag = tag;\n    this.type = type;\n    this.text = text;\n    this.html = html;\n    this.xpath = xpath;\n    this.css_selector = css_selector;\n    this.bounding_box = bounding_box;\n    this.element = element;\n  }\n}\n","import { ElementInfo } from './constants';\n\nexport function generateXPath(element) {\n  if (!element) return '';\n  \n  // If element has an id, use that (it's unique and shorter)\n  if (element.id) {\n    return `//*[@id=\"${element.id}\"]`;\n  }\n  \n  const parts = [];\n  let current = element;\n  \n  while (current && current.nodeType === Node.ELEMENT_NODE) {\n    let index = 1;\n    let sibling = current.previousSibling;\n    \n    while (sibling) {\n      if (sibling.nodeType === Node.ELEMENT_NODE && sibling.tagName === current.tagName) {\n        index++;\n      }\n      sibling = sibling.previousSibling;\n    }\n    \n    const tagName = current.tagName.toLowerCase();\n    parts.unshift(`${tagName}[${index}]`);\n    current = current.parentNode;\n  }\n  \n  return '/' + parts.join('/');\n}\n\nexport function getElementInfo(element, index) {\n  // Get CSS selector\n  const getCssPath = (el) => {\n    const path = [];\n    while (el.nodeType === Node.ELEMENT_NODE) {\n      let selector = el.nodeName.toLowerCase();\n      if (el.id) {\n        selector = `#${el.id}`;\n        path.unshift(selector);\n        break;\n      } else {\n        let sibling = el;\n        let nth = 1;\n        while (sibling = sibling.previousElementSibling) {\n          if (sibling.nodeName.toLowerCase() === selector) nth++;\n        }\n        if (nth > 1) selector += `:nth-of-type(${nth})`;\n      }\n      path.unshift(selector);\n      el = el.parentNode;\n    }\n    return path.join(' > ');\n  };\n\n  // Get bounding box\n  const rect = element.getBoundingClientRect();\n  const boundingBox = {\n    x: rect.x,\n    y: rect.y,\n    width: rect.width,\n    height: rect.height\n  };\n\n  // Return element info with pre-calculated values\n  return new ElementInfo(element, index, {\n    tag: element.tagName.toLowerCase(),\n    type: element.type || '',\n    text: element.textContent.trim(),\n    html: element.outerHTML,\n    xpath: generateXPath(element),\n    css_selector: getCssPath(element),\n    bounding_box: boundingBox\n  });\n}\n\n\n\n\nconst filterZeroDimensions = (elementInfo) => {\n  const rect = elementInfo.bounding_box;\n  const hasSize = rect.width > 0 && rect.height > 0;\n  const style = window.getComputedStyle(elementInfo.element);\n  const isVisible = style.display !== 'none' && style.visibility !== 'hidden';\n  \n  if (!hasSize || !isVisible) {\n    if (elementInfo.element.isConnected) {\n      console.debug('Filtered out invisible/zero-size element:', {\n        tag: elementInfo.tag,\n        xpath: elementInfo.xpath,\n        hasSize,\n        isVisible,\n        dimensions: rect\n      });\n    }\n    return false;\n  }\n  return true;\n};\n\nexport function uniquifyElements(elements) {\n  const seen = new Set();\n  console.log(`Starting uniquification with ${elements.length} elements`);\n  // First filter out elements with zero dimensions\n  const nonZeroElements = elements.filter(filterZeroDimensions);\n  // sort by xpath length so parents are processed first\n  nonZeroElements.sort((a, b) => a.xpath.length - b.xpath.length);\n  console.log(`After dimension filtering: ${nonZeroElements.length} elements remain (${elements.length - nonZeroElements.length} removed)`);\n  nonZeroElements.forEach(element => seen.add(element.xpath));\n  const filteredByParent = nonZeroElements.filter(element => {\n    const parentXPath = findClosestParent(seen, element.xpath);\n    return parentXPath == null || shouldKeepNestedElement(element, parentXPath);\n  });\n\n  console.log(`After parent/child filtering: ${filteredByParent.length} elements remain (${nonZeroElements.length - filteredByParent.length} removed)`);\n\n  // Final overlap filtering\n  const filteredResults = filteredByParent.filter(element => {\n    // Look for any element that came BEFORE this one in the array\n    const hasEarlierOverlap = filteredByParent.some(other => {\n      // Only check elements that came before (lower index)\n      if (filteredByParent.indexOf(other) >= filteredByParent.indexOf(element)) {\n        return false;\n      }\n      \n      return areElementsOverlapping(element, other);\n    });\n\n    // Keep element if it has no earlier overlapping elements\n    return !hasEarlierOverlap;\n  });\n  \n  console.log(`Final elements after filtering: ${filteredResults.length} (${filteredByParent.length - filteredResults.length} removed by overlap)`);\n  \n  return filteredResults.map((element, index) => ({\n    ...element,\n    index: index.toString()\n  }));\n}\n\n\n\nconst areElementsOverlapping = (element1, element2) => {\n  if (element1.xpath === element2.xpath) {\n    return true;\n  }\n  \n  const box1 = element1.bounding_box;\n  const box2 = element2.bounding_box;\n  \n  return box1.x === box2.x &&\n         box1.y === box2.y &&\n         box1.width === box2.width &&\n         box1.height === box2.height;\n        //  element1.text === element2.text &&\n        //  element2.tag === 'a';\n};\n\nfunction findClosestParent(seen, xpath) {\n  // Split the xpath into segments\n  const segments = xpath.split('/');\n  \n  // Try increasingly shorter paths until we find one in the seen set\n  for (let i = segments.length - 1; i > 0; i--) {\n    const parentPath = segments.slice(0, i).join('/');\n    if (seen.has(parentPath)) {\n      return parentPath;\n    }\n  }\n  \n  return null;\n}\n\nfunction shouldKeepNestedElement(elementInfo, parentXPath) {\n  let result = false;\n  \n  // If this is a checkbox/radio input\n  if (elementInfo.tag === 'input' && \n      (elementInfo.type === 'checkbox' || elementInfo.type === 'radio')) {\n    \n    // Check if parent is a label by looking at the parent xpath's last segment\n    const parentSegments = parentXPath.split('/');\n    const isParentLabel = parentSegments[parentSegments.length - 1].startsWith('label[');\n    \n    // If parent is a label, don't keep the input (we'll keep the label instead)\n    if (isParentLabel) {\n      return false;\n    }\n  }\n  \n  // Keep all other form controls and dropdown items\n  if (isFormControl(elementInfo) || isDropdownItem(elementInfo)) {\n    result = true;\n  }\n  \n  console.log(`shouldKeepNestedElement: ${elementInfo.tag} ${elementInfo.text} ${elementInfo.xpath} -> ${parentXPath} -> ${result}`);\n  return result;\n}\n\n// Helper function to check if element is a form control\nfunction isFormControl(elementInfo) {\n  return /^(input|select|textarea|button)$/i.test(elementInfo.tag);\n}\n\nconst isDropdownItem = (elementInfo) => {\n  const dropdownPatterns = [\n    /dropdown[-_]?item/i,    // matches: dropdown-item, dropdownitem, dropdown_item\n    /menu[-_]?item/i,        // matches: menu-item, menuitem, menu_item\n    /dropdown[-_]?link/i,    // matches: dropdown-link, dropdownlink, dropdown_link\n    /list[-_]?item/i,       // matches: list-item, listitem, list_item\n    /select[-_]?item/i,     // matches: select-item, selectitem, select_item  \n  ];\n\n  const rolePatterns = [\n    /menu[-_]?item/i,       // matches: menuitem, menu-item\n    /option/i,              // matches: option\n    /list[-_]?item/i,      // matches: listitem, list-item\n    /tree[-_]?item/i       // matches: treeitem, tree-item\n  ];\n\n  const hasMatchingClass = elementInfo.element.className && \n                          dropdownPatterns.some(pattern => \n                            pattern.test(elementInfo.element.className)\n                          );\n\n  const hasMatchingRole = elementInfo.element.getAttribute('role') && \n                         rolePatterns.some(pattern => \n                           pattern.test(elementInfo.element.getAttribute('role'))\n                         );\n\n  return hasMatchingClass || hasMatchingRole;\n};\n","import { uniquifyElements } from './utils';\n\nexport function findDropdowns() {\n  const dropdowns = [];\n  \n  // Native select elements\n  dropdowns.push(...document.querySelectorAll('select'));\n  \n  // Elements with dropdown roles\n  dropdowns.push(...document.querySelectorAll('[role=\"combobox\"], [role=\"listbox\"], [role=\"dropdown\"]'));\n  \n  // Common dropdown class patterns\n  const dropdownPattern = /.*(dropdown|select|combobox).*/i;\n  const elements = document.querySelectorAll('*');\n  const dropdownClasses = Array.from(elements).filter(el => {\n    const hasDropdownClass = dropdownPattern.test(el.className);\n    const validTag = ['li', 'ul', 'span', 'div', 'p'].includes(el.tagName.toLowerCase());\n    const result = hasDropdownClass && validTag;\n    return result;\n  });\n  dropdowns.push(...dropdownClasses);\n  \n  // Elements with aria-haspopup attribute\n  dropdowns.push(...document.querySelectorAll('[aria-haspopup=\"true\"], [aria-haspopup=\"listbox\"]'));\n\n  dropdowns.push(...document.querySelectorAll('nav ul li'));\n\n  return dropdowns;\n}\n\nexport function findClickables() {\n  const clickables = [];\n  \n  // Collect all clickable elements first\n  const links = [...document.querySelectorAll('a[href]')];\n  const buttons = [...document.querySelectorAll('button')];\n  const inputButtons = [...document.querySelectorAll('input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]')];\n  const roleButtons = [...document.querySelectorAll('[role=\"button\"]')];\n  const tabbable = [...document.querySelectorAll('[tabindex=\"0\"]')];\n  const clickHandlers = [...document.querySelectorAll('[onclick]')];\n  const dropdowns = findDropdowns();\n  const checkboxes = [...document.querySelectorAll('input[type=\"checkbox\"]')];\n  const radios = [...document.querySelectorAll('input[type=\"radio\"]')];\n  const toggles = findToggles();\n  const pointerElements = findElementsWithPointer();\n  // Add all elements at once\n  clickables.push(\n    ...links,\n    ...buttons,\n    ...inputButtons,\n    ...roleButtons,\n    ...tabbable,\n    ...clickHandlers,\n    ...dropdowns,\n    ...checkboxes,\n    ...radios,\n    ...toggles,\n    ...pointerElements\n  );\n\n  // Only uniquify once at the end\n  return clickables;  // Let findElements handle the uniquification\n}\n\nexport function findToggles() {\n  const toggles = [];\n  const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n  const togglePattern = /switch|toggle|slider/i;\n\n  checkboxes.forEach(checkbox => {\n    let isToggle = false;\n\n    // Check the checkbox itself\n    if (togglePattern.test(checkbox.className) || togglePattern.test(checkbox.getAttribute('role') || '')) {\n      isToggle = true;\n    }\n\n    // Check parent elements (up to 3 levels)\n    if (!isToggle) {\n      let element = checkbox;\n      for (let i = 0; i < 3; i++) {\n        const parent = element.parentElement;\n        if (!parent) break;\n\n        const className = parent.className || '';\n        const role = parent.getAttribute('role') || '';\n\n        if (togglePattern.test(className) || togglePattern.test(role)) {\n          isToggle = true;\n          break;\n        }\n        element = parent;\n      }\n    }\n\n    // Check next sibling\n    if (!isToggle) {\n      const nextSibling = checkbox.nextElementSibling;\n      if (nextSibling) {\n        const className = nextSibling.className || '';\n        const role = nextSibling.getAttribute('role') || '';\n        if (togglePattern.test(className) || togglePattern.test(role)) {\n          isToggle = true;\n        }\n      }\n    }\n\n    if (isToggle) {\n      toggles.push(checkbox);\n    }\n  });\n\n  return toggles;\n}\n\nexport function findNonInteractiveElements() {\n  // Get all elements in the document\n  const all = Array.from(document.querySelectorAll('*'));\n  \n  // Filter elements based on Python implementation rules\n  return all.filter(element => {\n    if (!element.firstElementChild) {\n      const tag = element.tagName.toLowerCase();\n      if (!['select', 'button', 'a'].includes(tag)) {\n        return ['p', 'span', 'div', 'input', 'textarea'].includes(tag);\n      }\n    }\n    return false;\n  });\n}\n\nexport function findElementsWithPointer() {\n  const elements = [];\n  const allElements = document.querySelectorAll('*');\n  \n  console.log('Checking elements with pointer style...');\n  \n  allElements.forEach(element => {\n    // Skip SVG elements for now\n    if (element instanceof SVGElement) {\n      return;\n    }\n    \n    const style = window.getComputedStyle(element);\n    if (style.cursor === 'pointer') {\n      elements.push(element);\n    }\n  });\n  \n  console.log(`Found ${elements.length} elements with pointer cursor`);\n  return elements;\n}\n","import { ElementTag } from './constants';\nimport { findDropdowns, findClickables, findToggles, findNonInteractiveElements } from './finders';\nimport { uniquifyElements, getElementInfo } from './utils';\n\nexport const highlight = {\n  execute: async function(elementTypes) {\n    const elements = await findElements(elementTypes);\n    highlightElements(elements);\n    return elements;\n  },\n\n  unexecute: function() {\n    const overlay = document.getElementById('highlight-overlay');\n    if (overlay) {\n      overlay.remove();\n    }\n  },\n\n  getElementInfo\n};\n\n\nexport function unhighlightElements() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\n\n\n\nexport async function findElements(elementTypes) {\n  const typesArray = Array.isArray(elementTypes) ? elementTypes : [elementTypes];\n  console.log('🔍 Starting element search for types:', typesArray);\n\n  const elements = [];\n  typesArray.forEach(elementType => {\n    if (elementType === ElementTag.FILLABLE) {\n      const inputs = [...document.querySelectorAll('input:not([type=\"radio\"]):not([type=\"checkbox\"])')];\n      console.log('Found inputs:', inputs.length, inputs);\n      elements.push(...inputs);\n      \n      const textareas = [...document.querySelectorAll('textarea')];\n      console.log('Found textareas:', textareas.length);\n      elements.push(...textareas);\n      \n      const editables = [...document.querySelectorAll('[contenteditable=\"true\"]')];\n      console.log('Found editables:', editables.length);\n      elements.push(...editables);\n    }\n    if (elementType === ElementTag.SELECTABLE) {\n      elements.push(...findDropdowns());\n    }\n    if (elementType === ElementTag.CLICKABLE) {\n      elements.push(...findClickables());\n      elements.push(...findToggles());\n      elements.push(...document.querySelectorAll('input[type=\"checkbox\"]'));\n      elements.push(...document.querySelectorAll('input[type=\"radio\"]'));\n    }\n    if (elementType === ElementTag.NON_INTERACTIVE_ELEMENT) {\n      elements.push(...findNonInteractiveElements());\n    }\n  });\n\n  // console.log('Before uniquify:', elements.length);\n  const elementsWithInfo = elements.map((element, index) => \n    getElementInfo(element, index)\n  );\n  \n  const uniqueElements = uniquifyElements(elementsWithInfo);\n  console.log(`Found ${uniqueElements.length} elements:`);\n  uniqueElements.forEach(info => {\n    console.log(`Element ${info.index}:`, info);\n  });\n  \n  return uniqueElements;\n}\n\n// elements is an array of objects with index, xpath\nexport function highlightElements(elements) {\n  // console.log('Starting highlight for elements:', elements);\n  \n  // Create overlay if it doesn't exist\n  let overlay = document.getElementById('highlight-overlay');\n  if (!overlay) {\n    overlay = document.createElement('div');\n    overlay.id = 'highlight-overlay';\n    overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 10000;\n    `;\n    document.body.appendChild(overlay);\n  }\n  \n  const getElementByXPath = (xpath) => {\n    const element = document.evaluate(\n      xpath, \n      document, \n      null, \n      XPathResult.FIRST_ORDERED_NODE_TYPE, \n      null\n    ).singleNodeValue;\n    \n    if (!element) {\n      console.warn('Failed to find element with xpath:', xpath);\n    }\n    return element;\n  };\n\n  const updateHighlights = () => {\n    overlay.innerHTML = '';\n    \n    elements.forEach(elementInfo => {\n      const element = getElementByXPath(elementInfo.xpath);\n      if (!element) return;\n\n      const rect = element.getBoundingClientRect();\n      // console.log('Element rect:', elementInfo.tag, rect);\n      \n      if (rect.width === 0 || rect.height === 0) {\n        console.warn('Element has zero dimensions:', elementInfo);\n        return;\n      }\n      \n      // Create border highlight (red rectangle)\n      const highlight = document.createElement('div');\n      highlight.style.cssText = `\n        position: fixed;\n        left: ${rect.x}px;\n        top: ${rect.y}px;\n        width: ${rect.width}px;\n        height: ${rect.height}px;\n        border: 1px solid rgb(255, 0, 0);\n        transition: all 0.2s ease-in-out;\n      `;\n\n      // Create index label container - now positioned to the right and slightly up\n      const labelContainer = document.createElement('div');\n      labelContainer.style.cssText = `\n        position: absolute;\n        right: -10px;     /* Offset to the right */\n        top: -10px;       /* Offset upwards */\n        padding: 4px;\n        background-color: rgba(255, 255, 0, 0.6);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n\n      const text = document.createElement('span');\n      text.style.cssText = `\n        color: rgb(0, 0, 0, 0.8);\n        font-family: Arial, sans-serif;\n        font-size: 10px;\n        line-height: 1;\n      `;\n      text.textContent = elementInfo.index;\n      \n      labelContainer.appendChild(text);\n      highlight.appendChild(labelContainer);\n      overlay.appendChild(highlight);\n    });\n  };\n\n  // Initial highlight\n  updateHighlights();\n\n  // Update highlights on scroll and resize\n  const scrollHandler = () => {\n    requestAnimationFrame(updateHighlights);\n  };\n  \n  window.addEventListener('scroll', scrollHandler, true);\n  window.addEventListener('resize', updateHighlights);\n\n  // Store event handlers for cleanup\n  overlay.scrollHandler = scrollHandler;\n  overlay.updateHighlights = updateHighlights;\n}\n\nfunction unexecute() {\n  const overlay = document.getElementById('highlight-overlay');\n  if (overlay) {\n    // Remove event listeners\n    window.removeEventListener('scroll', overlay.scrollHandler, true);\n    window.removeEventListener('resize', overlay.updateHighlights);\n    overlay.remove();\n  }\n}\n\n// Make it available globally for both Extension and Playwright\nif (typeof window !== 'undefined') {\n  window.ProboLabs = {\n    ElementTag,\n    highlight,\n    unhighlightElements,\n    findElements,\n    highlightElements\n  };\n}\n\n\n"],"names":["ElementTag","CLICKABLE","FILLABLE","SELECTABLE","NON_INTERACTIVE_ELEMENT","ElementInfo","constructor","element","index","tag","type","text","html","xpath","css_selector","bounding_box","this","toString","generateXPath","id","parts","current","nodeType","Node","ELEMENT_NODE","sibling","previousSibling","tagName","toLowerCase","unshift","parentNode","join","getElementInfo","rect","getBoundingClientRect","boundingBox","x","y","width","height","textContent","trim","outerHTML","el","path","selector","nodeName","nth","previousElementSibling","getCssPath","filterZeroDimensions","elementInfo","hasSize","style","window","getComputedStyle","isVisible","display","visibility","isConnected","console","debug","dimensions","uniquifyElements","elements","seen","Set","log","length","nonZeroElements","filter","sort","a","b","forEach","add","filteredByParent","parentXPath","segments","split","i","parentPath","slice","has","findClosestParent","result","parentSegments","startsWith","test","isFormControl","isDropdownItem","shouldKeepNestedElement","filteredResults","some","other","indexOf","areElementsOverlapping","map","element1","element2","box1","box2","hasMatchingClass","className","pattern","hasMatchingRole","getAttribute","findDropdowns","dropdowns","push","document","querySelectorAll","dropdownPattern","dropdownClasses","Array","from","hasDropdownClass","validTag","includes","findClickables","clickables","links","buttons","inputButtons","roleButtons","tabbable","clickHandlers","checkboxes","radios","toggles","findToggles","pointerElements","allElements","SVGElement","cursor","findElementsWithPointer","togglePattern","checkbox","isToggle","parent","parentElement","role","nextSibling","nextElementSibling","highlight","execute","async","elementTypes","findElements","highlightElements","unexecute","overlay","getElementById","remove","unhighlightElements","typesArray","isArray","elementType","inputs","textareas","editables","firstElementChild","uniqueElements","info","createElement","cssText","body","appendChild","updateHighlights","innerHTML","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","warn","getElementByXPath","labelContainer","scrollHandler","requestAnimationFrame","addEventListener","ProboLabs"],"mappings":"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"}